blueprint:
  name: Light/Switch Scheduler
  description: >
    Turn one or more lights or switches on/off at set times or around sunrise/sunset,
    with dropdown action/offset selection and active days of the week.
  domain: automation
  input:
    target_entities:
      name: Lights or Switches
      selector:
        entity:
          multiple: true
          domain:
            - light
            - switch

    # --- Time-based Triggers ---
    enable_turn_on_time:
      name: Enable Turn ON Time
      default: false
      selector:
        boolean:

    turn_on_time:
      name: Turn ON Time
      description: "Fixed time to turn on (ignored unless toggle is ON)"
      selector:
        time:

    enable_turn_off_time:
      name: Enable Turn OFF Time
      default: false
      selector:
        boolean:

    turn_off_time:
      name: Turn OFF Time
      description: "Fixed time to turn off (ignored unless toggle is ON)"
      selector:
        time:

    # --- Sunrise/Sunset Triggers ---
    enable_sunrise:
      name: Enable Sunrise Trigger
      default: false
      selector:
        boolean:

    sunrise_option:
      name: Sunrise Trigger
      description: Choose what happens relative to sunrise
      default: "none"
      selector:
        select:
          mode: dropdown
          options:
            - label: "Please select..."
              value: "none"
            - label: "Turn ON at sunrise"
              value: "on_00:00:00"
            - label: "Turn ON 15 minutes after sunrise"
              value: "on_00:15:00"
            - label: "Turn OFF at sunrise"
              value: "off_00:00:00"
            - label: "Turn OFF 15 minutes after sunrise"
              value: "off_00:15:00"

    enable_sunset:
      name: Enable Sunset Trigger
      default: false
      selector:
        boolean:

    sunset_option:
      name: Sunset Trigger
      description: Choose what happens relative to sunset
      default: "none"
      selector:
        select:
          mode: dropdown
          options:
            - label: "Please select..."
              value: "none"
            - label: "Turn ON at sunset"
              value: "on_00:00:00"
            - label: "Turn ON 15 minutes after sunset"
              value: "on_00:15:00"
            - label: "Turn OFF at sunset"
              value: "off_00:00:00"
            - label: "Turn OFF 15 minutes after sunset"
              value: "off_00:15:00"

    # --- Active Days ---
    active_days:
      name: Active Days
      description: Days of the week when this automation should run
      default:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
      selector:
        select:
          multiple: true
          mode: list
          options:
            - label: "Monday"
              value: mon
            - label: "Tuesday"
              value: tue
            - label: "Wednesday"
              value: wed
            - label: "Thursday"
              value: thu
            - label: "Friday"
              value: fri
            - label: "Saturday"
              value: sat
            - label: "Sunday"
              value: sun

mode: single

trigger:
  - platform: time
    at: !input turn_on_time
    id: time_on
  - platform: time
    at: !input turn_off_time
    id: time_off
  - platform: sun
    event: sunrise
    offset: "00:00:00"
    id: sunrise
  - platform: sun
    event: sunset
    offset: "00:00:00"
    id: sunset

condition:
  # Restrict to selected days
  - condition: template
    value_template: >
      {{ now().strftime('%a')[:3] | lower in active_days }}

  # Only run if the trigger type is enabled
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ trigger.id == 'time_on' and enable_turn_on_time }}"
      - condition: template
        value_template: "{{ trigger.id == 'time_off' and enable_turn_off_time }}"
      - condition: template
        value_template: "{{ trigger.id == 'sunrise' and enable_sunrise and sunrise_option != 'none' }}"
      - condition: template
        value_template: "{{ trigger.id == 'sunset' and enable_sunset and sunset_option != 'none' }}"

action:
  - choose:
      - conditions:
          - condition: trigger
            id: time_on
        sequence:
          - service: homeassistant.turn_on
            target:
              entity_id: !input target_entities

      - conditions:
          - condition: trigger
            id: time_off
        sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: !input target_entities

      - conditions:
          - condition: trigger
            id: sunrise
          - condition: template
            value_template: "{{ sunrise_option.startswith('on_') and enable_sunrise }}"
        sequence:
          - delay: "{{ sunrise_option.split('_')[1] }}"
          - service: homeassistant.turn_on
            target:
              entity_id: !input target_entities

      - conditions:
          - condition: trigger
            id: sunrise
          - condition: template
            value_template: "{{ sunrise_option.startswith('off_') and enable_sunrise }}"
        sequence:
          - delay: "{{ sunrise_option.split('_')[1] }}"
          - service: homeassistant.turn_off
            target:
              entity_id: !input target_entities

      - conditions:
          - condition: trigger
            id: sunset
          - condition: template
            value_template: "{{ sunset_option.startswith('on_') and enable_sunset }}"
        sequence:
          - delay: "{{ sunset_option.split('_')[1] }}"
          - service: homeassistant.turn_on
            target:
              entity_id: !input target_entities

      - conditions:
          - condition: trigger
            id: sunset
          - condition: template
            value_template: "{{ sunset_option.startswith('off_') and enable_sunset }}"
        sequence:
          - delay: "{{ sunset_option.split('_')[1] }}"
          - service: homeassistant.turn_off
            target:
              entity_id: !input target_entities
